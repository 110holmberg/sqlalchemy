.. change::
    :tags: bug, orm
    :tickets: 6350

    Fixed two distinct issues mostly affecting
    :class:`_hybrid.hybrid_property`, which would come into play under common
    mis-configuration scenarios that were silently ignored in 1.3, and now
    failed in 1.4, where the "expression" implementation would return a non
    :class:`_sql.ClauseElement` such as a boolean value. For both issues, 1.3's
    behavior was to silently ignore the mis-configuration and ultimately
    attempt to interpret the value as a SQL expression, which would lead to an
    incorrect query.

    * Fixed issue regarding interaction of the attribute system with
      hybrid_property, where if the ``__clause_element__()`` method of the
      attribute returned a non-:class:`_sql.ClauseElement` object, an internal
      ``AttributeError`` would lead the attribute to return the ``expression``
      function on the hybrid_property itself, as the attribute error was
      against the name ``.expression`` which would invoke the ``__getattr__()``
      method as a fallback. This now raises explicitly. In 1.3 the
      non-:class:`_sql.ClauseElement` was returned directly.

    * Fixed issue in SQL argument coercions system where passing the wrong
      kind of object to methods that expect column expressions would fail if
      the object were altogether not a SQLAlchemy object, such as a Python
      function, in cases where the object were not just coerced into a bound
      value. Again 1.3 did not have a comprehensive argument coercion system
      so this case would also pass silently.

