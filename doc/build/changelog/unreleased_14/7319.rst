.. change::
    :tags: bug, types, regression
    :tickets: 7319

    Extended the :attr:`.TypeDecorator.cache_ok` attribute and corresponding
    warning message if this flag is not defined, a behavior first established
    for :class:`.TypeDecorator` as part of :ticket:`6436`, to also take place
    for :class:`.UserDefinedType`, by generalizing the flag and associated
    caching logic to a new common base for these two types,
    :class:`.ExternalType` to create :attr:`.UserDefinedType.cache_ok`.

    The change means any current :class:`.UserDefinedType` will now cause SQL
    statement caching to no longer take place for statements which make use of
    the datatype, along with a warning being emitted, unless the class defines
    the :attr:`.UserDefinedType.cache_ok` flag as True. If the datatype cannot
    form a deterministic, hashable cache key derived from its arguments,
    the attribute may be set to False which will continue to keep caching disabled but will suppress the
    warning. In particular, custom datatypes currently used in packages such as
    SQLAlchemy-utils will need to implement this flag. The issue was observed
    as a result of a SQLAlchemy-utils datatype that is not currently cacheable.

    .. seealso::

        :attr:`.ExternalType.cache_ok`
