.. change::
    :tags: orm, usecase
    :tickets: 6808

    Added new attribute :attr:`_sql.Select.columns_clause_froms` that will
    retrieve the FROM list implied by the columns clause of the
    :class:`_sql.Select` statement. This differs from the old
    :attr:`_sql.Select.froms` collection in that it does not perform any ORM
    compilation steps, which necessarily deannotate the FROM elements and do
    things like compute joinedloads etc., which makes it not an appropriate
    candidate for the :meth:`_sql.Select.select_from` method. Additionally adds
    a new parameter
    :paramref:`_sql.Select.with_only_columns.maintain_column_froms` that
    transfers this collection to :meth:`_sql.Select.select_from` before
    replacing the columns collection.

    In addition, the :attr:`_sql.Select.froms` is renamed to
    :meth:`_sql.Select.get_final_froms`, to stress that this collection is not
    a simple accessor and is instead calculated given the full state of the
    object, which can be an expensive call when used in an ORM context.

    Additionally fixes a regression involving the
    :func:`_orm.with_only_columns` function to support applying criteria to
    column elements that were replaced with either
    :meth:`_sql.Select.with_only_columns` or :meth:`_orm.Query.with_entities` ,
    which had broken as part of :ticket:`6503` released in 1.4.19.
