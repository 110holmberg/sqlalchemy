.. change::
    :tags: bug, orm, regression
    :tickets: 7209

    Fixed regression where the use of a :class:`_orm.hybrid_property` attribute
    or a mapped :func:`_orm.composite` attribute as a key passed to the
    :meth:`_dml.Update.values` method for an ORM-enabled :class:`_dml.Update`
    statement, as well as when using it via the legacy
    :meth:`_orm.Query.update` method, would be processed for incoming
    ORM/hybrid/composite values within the compilation stage of the UPDATE
    statement, which meant that in those cases where caching occurred,
    subsequent invocations of the same statement would no longer receive the
    correct values. This would include not only hybrids that use the
    :meth:`_orm.hybrid_property.update_expression` method, but any use of a
    plain hybrid attribute as well. For composites, the issue instead caused a
    non-repeatable cache key to be generated, which would break caching and
    could fill up the statement cache with repeated statements.

    The :class:`_dml.Update` construct now handles the processing of key/value
    pairs passed to :meth:`_dml.Update.values` and
    :meth:`_dml.Update.ordered_values` up front when the construct is first
    generated, before the cache key has been generated so that the key/value
    pairs are processed each time, and so that the cache key is generated
    against the individual column/value pairs that will ultimately be
    used in the statement.

