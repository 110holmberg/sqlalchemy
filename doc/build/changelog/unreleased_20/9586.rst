.. change::
    :tags: bug, mssql
    :tickets: 9586

    Changed the bulk INSERT strategy used for SQL Server "executemany" with
    pyodbc when ``fast_executemany`` is set to ``True`` by using
    ``fast_executemany`` / ``cursor.executemany()`` for bulk INSERT that does
    not include RETURNING, restoring the same behavior as was used in
    SQLAlchemy 1.4 when this parameter is set.

    New performance details from end users have shown that ``fast_executemany``
    is still much faster for very large datasets as it uses ODBC commands that
    can receive all rows in a single round trip, allowing for much larger
    datasizes than the batches that can be sent by "insertmanyvalues"
    as was implemented for SQL Server.

    While this change was made such that "insertmanyvalues" continued to be
    used for INSERT that includes RETURNING, as well as if ``fast_executemany``
    were not set, due to :ticket:`9603`, the "insertmanyvalues" strategy has
    been disabled for SQL Server across the board in any case.
