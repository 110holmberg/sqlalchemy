.. change::
    :tags: bug, orm
    :tickets: 9179

    When using the :class:`.MappedAsDataclass` superclass, all classes within
    the hierarchy that are subclasses of this class will now be run through the
    ``@dataclasses.dataclass`` function whether or not they are actually
    mapped, so that non-ORM fields declared on non-mapped classes within the
    hierarchy will be used when mapped subclasses are turned into dataclasses.
    This behavior applies both to intermediary classes mapped with
    ``__abstract__ = True`` as well as to the user-defined declarative base
    itself, assuming :class:`.MappedAsDataclass` is present as a superclass for
    these classes.

    This allows non-mapped attributes such as ``InitVar`` declarations on
    superclasses to be used, without the need to run the
    ``@dataclasses.dataclass`` decorator explicitly on each non-mapped class.
    The new behavior is considered as correct as this is what the :pep:`681`
    implementation expects when using a superclass to indicate dataclass
    behavior.
